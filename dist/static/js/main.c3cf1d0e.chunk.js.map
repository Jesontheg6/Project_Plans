{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/projects/ProjectDetails.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","serviceWorker.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","ownProps","match","params","data","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","navbar","exact","path","component","ProjectDetails","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3cf1d0e.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>Report Bug</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n\treturn (dispatch, getState, {getFirebase}) => {\n\t\tconst firebase = getFirebase();\n\n\t\t firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n\treturn (dispatch, getState, {getFirebase}) => {\n\t\tconst firebase = getFirebase();\n\n\t\tfirebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n\treturn(\n\t\t<ul className=\"right\">\n\t\t<li> <NavLink to='/signup'> Signup </NavLink></li>\n\t\t<li> <NavLink to='/signin'> Login</NavLink></li>\n\t\t</ul>\n\t\t)\n\t}\n\nexport default SignedOutLinks\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">SmashBugs</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({project}) => {\n\n\n\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n           <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Report a new bug</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Bug Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Bug description</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Report</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","\nexport const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile\n    const authorId = getState().firebase.auth.uid\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SignIn from './components/auth/SignIn'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch> \n          \t<Route exact path ='/' component={Dashboard} />\n          \t<Route path='/project/:id' component={ProjectDetails} />\n          \t<Route path='/signin' component={SignIn} />\n          \t<Route path='/signup' component={SignUp} />\n          \t<Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","    \nconst initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {\n\tprojects: [\n\t{id: '1', title: 'help me find peach', content: 'blah blah'},\n\t{id: '2', title: 'help me find peach', content: 'blah blah'},\n\t{id: '3', title: 'help me find peach', content: 'blah blah'}\n\t]\n} \n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('create project', action.project);\n      return state;\n      case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err)\t\n  \t\treturn state;\n  default:\n  \t\treturn state;\n\t}\n}\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar config = {\n    apiKey: \"AIzaSyCwl-QBpQcKmzFdKln9Rnj3IbXGL8W-QOY\",\n    authDomain: \"startupplan-6d82f.firebaseapp.com\",\n    databaseURL: \"https://startupplan-6d82f.firebaseio.com\",\n    projectId: \"startupplan-6d82f\",\n    storageBucket: \"startupplan-6d82f.appspot.com\",\n    messagingSenderId: \"243138866\"\n  };\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n\n});\n\n"],"sourceRoot":""}